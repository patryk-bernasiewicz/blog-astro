---
import { getRelativeLocaleUrl } from 'astro:i18n';
import { Icon } from "astro-icon/components";

import { SITE_TITLE } from "@consts";
import HeaderLink from "@components/HeaderLink.astro";
import ThemeSwitch from "@components/ThemeSwitch.astro";
import LanguageSwitch from "@components/LanguageSwitch.astro";
import { cn } from "@lib/tailwind";
import { getLanguageFromUrl } from "@lib/getLanguageFromUrl";
import { getPagesList } from '@lib/pagesStaticPathsGenerators';
import { getTranslationsByLanguage } from "@i18n/utils";

const userLanguage = getLanguageFromUrl(Astro.url);
const translations = getTranslationsByLanguage(userLanguage);
const pages = await getPagesList(userLanguage);
---

<header
  class={cn(
    "group h-12 w-full fixed flex z-20 shadow-lg bg-brandGray-50 dark:bg-brandGray-800",
    "dark:[&.scrolled-down]:bg-brandGray-900 [&.scrolled-down]:h-10"
  )}
  id="header"
>
  <nav class="container flex items-center">
    <h1 class="mr-2 text-xl">
      <a href={getRelativeLocaleUrl(userLanguage, '/blog/1')}>{SITE_TITLE}</a>
    </h1>
    <div
      class={cn(
        "absolute z-10 top-12 group-[.scrolled-down]:top-10 left-0 shadow-lg right-0",
        "bg-brandGray-50 dark:bg-brandGray-900 grid !grid-rows-[0fr] grid-rows-[1fr] transition-[template-grid-rows] duration-200 overflow-hidden",
        "md:static md:flex md:flex-row md:items-center md:overflow-visible md:shadow-none md:ml-auto",
        "md:!bg-transparent"
      )}
      id="menu"
    >
      <div
        class={`min-h-0 invisible
          md:min-h-[none] md:h-auto md:visible md:flex md:flex-row md:items-center`}
        id="menu-expander"
      >
        <div
          class={`px-4 py-4 flex flex-col-reverse
            md:flex-row-reverse md:gap-4 md:p-0 md:items-center`}
        >
          <div class="mt-4 md:m-0">
            <ThemeSwitch />
          </div>
          <ul class="order-1 mb-2 flex flex-col gap-4 md:order-[unset] md:flex-row md:items-center md:mb-0">
            <li>
              <HeaderLink href="/blog/1">Blog</HeaderLink>
            </li>
            {
              pages.items.map((page) => (
                <li>
                  <HeaderLink href={`/${page.fields.slug}`}>
                    {page.fields.title}
                  </HeaderLink>
                </li>
              ))
            }
          </ul>
          <LanguageSwitch />
        </div>
      </div>
    </div>
    <button type="button" class="md:hidden ml-auto">
      <Icon
        name="menu"
        class="[&_path]:fill-brandGray-900 dark:[&_path]:fill-brandGray-300"
      />
      <span class="sr-only">{translations.header.TOGGLE_MENU}</span>
    </button>
  </nav>
</header>
<script is:inline data-astro-rerun>
  (() => {
    const header = document.getElementById('header');
    const menu = document.getElementById("menu");
    const menuButton = document.querySelector("button");
    const menuExpander = document.getElementById("menu-expander");

    let scrollTimer;
    
    const debouncedScrollGuard = () => {
      clearTimeout(scrollTimer);

      if (!header) {
        return;
      }

      scrollTimer = setTimeout(() => {
        if (window.scrollY > 0) {
          header.classList.add('scrolled-down');
        } else {
          header.classList.remove('scrolled-down');
        }
      }, 50);
    }
    debouncedScrollGuard();
    window.addEventListener('scroll', debouncedScrollGuard);

    if (menu && menuButton && menuExpander) {
      menuButton.addEventListener("click", () => {
        if (menu.classList.contains('!grid-rows-[0fr]')) {
          menu.classList.remove("!grid-rows-[0fr]");
          menuExpander.classList.remove("invisible");
        } else {
          menu.classList.add("!grid-rows-[0fr]");
          menuExpander.classList.add("invisible");
        }
      });
    }
  })();
</script>
