---
import type { Page } from 'astro';
import { getRelativeLocaleUrl } from 'astro:i18n';

import Pagination from '@components/Pagination/Pagination.astro';
import type { BlogPost } from '@types';
import { getLanguageFromUrl } from '@lib/getLanguageFromUrl';
import BlogLayout from '@layouts/BlogLayout.astro';
import { getTranslationsByLanguage } from '@i18n/utils';
import { cn } from '@lib/tailwind';

interface Props {
  page: Page<BlogPost>;
}

const userLanguage = getLanguageFromUrl(Astro.url);
const translations = getTranslationsByLanguage(userLanguage);

const { page } = Astro.props;
const title = translations.pages.ENTRIES_PAGE_TITLE.replace('{page}', String(page.currentPage));
---
<BlogLayout title={title}>
  <ul class:list={[
    'container overflow-hidden flex-grow flex flex-col gap-8 px-2 pt-4 pb-8 relative',
    'before:absolute before:content-[""] before:block before:w-1 before:h-[125%] before:top-[50%] before:-translate-y-[50%] before:translate-x-[50%] before:bg-brandGradientVertical dark:before:opacity-25',
  ]}>
    {page.data.map((entry) => {
      const coverImage = entry.coverImage?.[0]?.fields;
      return (
        <li class={cn(
          'pl-6 max-w-[800px]',
          'before:absolute before:content-[""] before:left-6 before:translate-y-[0.325em] before:rounded-full before:w-6 before:h-6',
          'before:bg-white dark:before:bg-brandGray-800 before:border-brandGray-400 before:border-2',
          'hover:before:border-brandGray-300'
        )}>
          <a
            href={`${getRelativeLocaleUrl(userLanguage, `/blog/entry/${entry.slug}`)}?page=${page.currentPage}`}
            class="link flex flex-col gap-2 group md:gap-4"
          >
            <div class="flex flex-col gap-2">
              <h2 class="text-2xl text-primary group-hover:brightness-75 group-focus:brightness-75">{entry.title}</h2>
              <div class="text-body-dark dark:text-body-light">{entry.excerpt}</div>
            </div>
            {typeof coverImage?.file?.details === 'object' && 'image' in coverImage.file.details ? (
              <div class="flex items-center w-full">
                <img
                  src=""
                  data-src={coverImage.file.url as string}
                  alt={String(coverImage.title || entry.title)}
                  width={coverImage.file.details.image?.width}
                  height={coverImage.file.details.image?.height}
                  class="rounded-sm w-full max-w-80 aspect-[16/9] object-cover lazy-image md:max-w-96"
                />
              </div>
            ) : <div />}
          </a>
        </li>
      );
    })}
  </ul>
  <Pagination
    current={page.currentPage}
    total={page.lastPage}
    prevUrl={page.url.prev}
    nextUrl={page.url.next}
  />
</Layout>
<script src="@/scripts/lazy-load-images.ts"></script>