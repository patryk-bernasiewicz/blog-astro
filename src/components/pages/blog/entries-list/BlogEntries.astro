---
import type { Page } from "astro";
import { getRelativeLocaleUrl } from "astro:i18n";

import Pagination from "@components/Pagination/Pagination.astro";
import type { BlogPost } from "@types";
import { getLanguageFromUrl } from "@lib/getLanguageFromUrl";
import BlogLayout from "@layouts/BlogLayout.astro";
import { getTranslationsByLanguage } from "@i18n/utils";
import { Icon } from "astro-icon/components";
import FormattedDate from "@components/FormattedDate.astro";

interface Props {
  page: Page<BlogPost>;
}

const userLanguage = getLanguageFromUrl(Astro.url);
const translations = getTranslationsByLanguage(userLanguage);

const { page } = Astro.props;
const title = translations.pages.ENTRIES_PAGE_TITLE.replace(
  "{page}",
  String(page.currentPage)
);
---

<BlogLayout title={title}>
  <div
    class="container-small overflow-hidden flex-grow px-2 pt-6 pb-8 flex flex-col gap-4"
  >
    <h2>{translations.pages.ENTRIES_PAGE_HEADING}</h2>
    <ul class="flex mt-4 flex-col gap-10 relative">
      {
        page.data.map((entry) => {
          return (
            <li>
              <a
                href={`${getRelativeLocaleUrl(userLanguage, `/blog/entry/${entry.slug}`)}?page=${page.currentPage}`}
                class="link flex flex-col gap-4 group md:gap-6 md:flex-row group"
              >
                <div class="flex flex-col gap-2">
                  <h2 class="text-2xl text-brandGray-300 group-hover:text-primary transition-colors duration-200 ease-in-out">
                    {entry.title}
                  </h2>
                  <div class="flex items-center gap-2 text-sm text-brandGray-400/60 group-hover:text-brandGray-400 transition-colors duration-200 ease-in-out">
                    {entry.createdAt && (
                      <FormattedDate
                        date={new Date(entry.createdAt)}
                        startIcon="created"
                      />
                    )}
                    {entry.updatedAt && entry.updatedAt !== entry.createdAt && (
                      <FormattedDate
                        date={new Date(entry.updatedAt)}
                        startIcon="updated"
                      />
                    )}
                  </div>
                  <div class="text-body-dark/80 group-hover:text-body-dark dark:text-body-light/80 dark:group-hover:text-body-light transition-colors duration-200 ease-in-out">
                    {entry.excerpt}
                  </div>
                </div>
              </a>
            </li>
          );
        })
      }
    </ul>
  </div>
  <Pagination
    current={page.currentPage}
    total={page.lastPage}
    prevUrl={page.url.prev}
    nextUrl={page.url.next}
  />
</BlogLayout>
